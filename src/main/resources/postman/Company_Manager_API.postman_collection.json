{
	"info": {
		"_postman_id": "company-manager-api-collection",
		"name": "Company Manager API",
		"description": "API collection for Company Manager application - User Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"secondName\": \"Michael\",\n    \"lastName\": \"Doe\",\n    \"egn\": \"1234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						},
						"description": "Create a new user with valid data. Returns UserDto (firstName, secondName, lastName only)"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							]
						},
						"description": "Retrieve all users"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"1"
							]
						},
						"description": "Get user by ID (replace 1 with actual user ID)"
					},
					"response": []
				},
				{
					"name": "Get User by EGN",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/egn/1234567890",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"egn",
								"1234567890"
							]
						},
						"description": "Get user by EGN (replace 1234567890 with actual EGN)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Jane\",\n    \"secondName\": \"Elizabeth\",\n    \"lastName\": \"Smith\",\n    \"egn\": \"0987654321\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"1"
							]
						},
						"description": "Update user by ID (replace 1 with actual user ID)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"1"
							]
						},
						"description": "Delete user by ID (replace 1 with actual user ID)"
					},
					"response": []
				},
				{
					"name": "Search Users by First Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/search/firstname?firstName=John",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"search",
								"firstname"
							],
							"query": [
								{
									"key": "firstName",
									"value": "John"
								}
							]
						},
						"description": "Search users by first name"
					},
					"response": []
				},
				{
					"name": "Search Users by Last Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/users/search/lastname?lastName=Doe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"search",
								"lastname"
							],
							"query": [
								{
									"key": "lastName",
									"value": "Doe"
								}
							]
						},
						"description": "Search users by last name"
					},
					"response": []
				}
			],
			"description": "User management operations including CRUD operations and search functionality"
		},
		{
			"name": "Role Management",
			"item": [
				{
					"name": "Get All Roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"roles"
							]
						},
						"description": "Retrieve all available roles in the system"
					},
					"response": []
				},
				{
					"name": "Get Role by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/roles/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"roles",
								"1"
							]
						},
						"description": "Get role by ID (replace 1 with actual role ID)"
					},
					"response": []
				},
				{
					"name": "Get Role by Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/roles/name/admin",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"roles",
								"name",
								"admin"
							]
						},
						"description": "Get role by name (admin, company, or anonymous)"
					},
					"response": []
				}
			],
			"description": "Role management operations for system roles"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
